@model KVBchat_ASP.Areas.Blackjack.Models.BlackjackWithCurrentPlayerViewModel

<div>
    <div style="align-self:center;">
        Casino
        <div>
            Bet: @Model.BlackjackViewModel.Casino.Bet
        </div>
        <div>
            @if (Model.BlackjackViewModel.Casino.Cards != null)
            {
                @:Count of cards: @Model.BlackjackViewModel.Casino.Cards.Count
                <br />
                if (ViewBag.IsBlackjackGameFinished)
                {
                    @:Sum of cards: @Model.BlackjackViewModel.Casino.Cards.Sum(card => card.Value)
                }
                <br />
                for (int i = 0; i < Model.BlackjackViewModel.Casino.Cards.Count; i++)
                {
                    <span>
                        @{
                            string url;
                            if (i == 0 || ViewBag.IsBlackjackGameFinished)
                            {
                                url = "/Content/PNG/" + Model.BlackjackViewModel.Casino.Cards[i].Name
                                + Model.BlackjackViewModel.Casino.Cards[i].Suit + ".png";
                            }
                            else
                            {
                                url = "/Content/PNG/blue_back.png";
                            }
                            <img src=@url width="65" height="100" />
                        }
                    </span>
                }
            }
        </div>
    </div>


    <div>
        @foreach (var player in Model.BlackjackViewModel.Players)
        {
            <br />
            @player.Nickname
            <div>
                Bet: @player.Bet
            </div>
            <div>
                Count of cards: @player.Cards.Count
                <br />
                @{
                    if (player.Id == Model.CurrentUserId)
                    {
                        @:Balance: @player.Balance
                        <br />
                        @:Sum of cards: @player.Cards.Sum(card => card.Value)
                        <br />
                        foreach (var card in player.Cards)
                        {
                            <span>
                                @{
                                    string url = "/Content/PNG/" + card.Name + card.Suit + ".png";
                                }
                                <img src=@url width="65" height="100" />
                            </span>
                        }
                    }
                    else
                    {
                        if (ViewBag.IsBlackjackGameFinished)
                        {
                            @:Sum of cards: @player.Cards.Sum(card => card.Value)
                        }
                        foreach (var card in player.Cards)
                        {
                            <span>
                                @{
                                    string url;
                                    if (ViewBag.IsBlackjackGameFinished)
                                    {
                                        url = "/Content/PNG/" + card.Name + card.Suit + ".png";
                                    }
                                    else
                                    {
                                        url = "/Content/PNG/blue_back.png";
                                    }
                                }
                                <img src=@url width="65" height="100" />
                            </span>
                        }
                    }
                }
            </div>
        }
    </div>
</div>

@if ((Model.BlackjackViewModel.CurrentPlayer != -1) &&
    (Model.BlackjackViewModel.CurrentPlayerId == Model.CurrentUserId))
{
<div>
    <span>
        <br />
        @using (@Ajax.BeginForm("Double", "Blackjack", new { area = "Blackjack", id = Model.BlackjackViewModel.GameId }, new AjaxOptions
        {
            HttpMethod = "POST",
            OnSuccess = "Updater"
        }, null))
        {
            <input type="submit" value="Double" class="btn btn-success" />
        }
    </span>

    <span>
        <br />
        @using (@Ajax.BeginForm("Hit", "Blackjack", new { area = "Blackjack", id = Model.BlackjackViewModel.GameId }, new AjaxOptions
        {
            HttpMethod = "POST",
            OnSuccess = "Updater"
        }, null))
        {
            <input type="submit" value="Hit" class="btn btn-primary" />
        }
    </span>

    <span>
        <br />
        @using (@Ajax.BeginForm("Stand", "Blackjack", new { area = "Blackjack", id = Model.BlackjackViewModel.GameId }, new AjaxOptions
        {
            HttpMethod = "POST",
            OnSuccess = "Updater"
        }, null))
        {
            <input type="submit" value="Stand" class="btn btn-warning" />
        }
    </span>

    <span>
        <br />
        @using (@Ajax.BeginForm("Help", "Blackjack", new { area = "Blackjack", id = Model.BlackjackViewModel.GameId }, new AjaxOptions
        {
            HttpMethod = "POST",
            OnSuccess = "Updater",
            UpdateTargetId= "HelpId"
        }, null))
        {
            <input type="submit" value="Ask nasha help" class="btn btn-warning" />
        }
    </span>
</div>
}
else
{
    <div> W8 u turn!</div>
}
@if (!string.IsNullOrEmpty(Model.BlackjackViewModel.Winners))
{
    <div>@Model.BlackjackViewModel.Winners</div>
}
else
{
    <div>Stil playing</div>
}

<br />
@using (Html.BeginForm("ExitGame", "Blackjack", new { area = "Blackjack", id = Model.BlackjackViewModel.GameId }))
{
    <input type="submit" value="Exit game" class="btn btn-info" />
}
<br />
@if (ViewBag.IsBlackjackGameFinished)
{
    using (Html.BeginForm("StartNewGame", "Blackjack", new { area = "Blackjack", id = Model.BlackjackViewModel.GameId }))
    {
        <input type="submit" value="Start new game" class="btn btn-info" />
    }
}

