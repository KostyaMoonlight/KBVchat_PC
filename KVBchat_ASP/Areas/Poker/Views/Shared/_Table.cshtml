@model KVBchat_ASP.Areas.Poker.Models.PokerWithCurrentPlayerViewModel

<div>

    <div style="align-self:center;">
        <div>
            @if (Model.PokerViewModel.CardsOnTable != null)
            {
                foreach (var card in Model.PokerViewModel.CardsOnTable)
                {
                    <span>
                        @{
                            string url = "/Content/PNG/" + card.Name + ".png";
                            <img src=@url width="65" height="100" />
                        }
                    </span>
                }
            }
        </div>
    </div>

    <div>
        @foreach (var player in Model.PokerViewModel.Players)
        {
            string bgColor = "";
            if (player.Id == Model.PokerViewModel.CurrentPlayerId &&
                Model.PokerViewModel.CurrentPlayerId == Model.CurrentUserId)
            {
                bgColor = "lightgoldenrodyellow";
            }
            else if (player.Id == Model.PokerViewModel.CurrentPlayerId &&
                Model.PokerViewModel.CurrentPlayerId != Model.CurrentUserId)
            {
                bgColor = "lightblue";
            }
            else
            {
                bgColor = "";
            }
            <div style="background-color: @bgColor">
                <br />
                @player.Nickname
                <div>
                    Bet: @player.Bet
                </div>
                <div>
                    @{
                        if (player.Id == Model.CurrentUserId)
                        {
                            @:Balance: @player.Balance
                            <br />
                            foreach (var card in player.Cards)
                            {
                                <span>
                                    @{
                                        string url = "/Content/PNG/" + card.Name + ".png";
                                    }
                                    <img src=@url width="65" height="100" />
                                </span>
                            }
                        }
                        else
                        {
                            foreach (var card in player.Cards)
                            {
                                <span>
                                    @{
                                        string url;
                                        if (ViewBag.IsPokerGameFinished)
                                        {
                                            url = "/Content/PNG/" + card.Name + ".png";
                                        }
                                        else
                                        {
                                            url = "/Content/PNG/blue_back.png";
                                        }
                                    }
                                    <img src=@url width="65" height="100" />
                                </span>
                            }
                        }
                    }
                </div>
            </div>

        }
    </div>
</div>


@if ((Model.PokerViewModel.CurrentPlayer != -1) &&
    (Model.PokerViewModel.CurrentPlayerId == Model.CurrentUserId) &&
    !ViewBag.IsPokerGameFinished)
{
    <div>
        <br />
        <span style="float:left; margin: 0 10px 0 0">
            @using (@Ajax.BeginForm("Fold", "Poker", new { area = "Poker", id = Model.PokerViewModel.GameId }, new AjaxOptions
            {
                HttpMethod = "POST",
                OnSuccess = "Updater"
            }, null))
            {
                <input type="submit" value="Fold" class="btn btn-warning" />
            }
        </span>
        @{
            if (!ViewBag.IsWaitForCall)
            {

                <span style="float:left; margin: 0 10px 0 0">
                    @using (@Ajax.BeginForm("Check", "Poker", new { area = "Poker", id = Model.PokerViewModel.GameId }, new AjaxOptions
                    {
                        HttpMethod = "POST",
                        OnSuccess = "Updater"
                    }, null))
                    {
                        <input type="submit" value="Check" class="btn btn-success" />
                    }
                </span>

                <span>
                    @using (@Ajax.BeginForm("Bet", "Poker", new { area = "Poker", id = Model.PokerViewModel.GameId }, new AjaxOptions
                    {
                        HttpMethod = "POST",
                        OnSuccess = "Updater"
                    }, null))
                    {
                        <input type="submit" value="Bet" class="btn btn-warning" style="margin:0 0 10px 0" />
                        <br />
                        @Html.Label("Bet: ")
                        @Html.TextBox("bet")
                    }
                </span>
            }
            else
            {
                <span style="float:left; margin: 0 10px 0 0">
                    @using (@Ajax.BeginForm("Call", "Poker", new { area = "Poker", id = Model.PokerViewModel.GameId }, new AjaxOptions
                    {
                        HttpMethod = "POST",
                        OnSuccess = "Updater"
                    }, null))
                    {
                        <input type="submit" value="Call" class="btn btn-warning" />
                    }
                </span>

                <span>
                    @using (@Ajax.BeginForm("Raise", "Poker", new { area = "Poker", id = Model.PokerViewModel.GameId }, new AjaxOptions
                    {
                        HttpMethod = "POST",
                        OnSuccess = "Updater"
                    }, null))
                    {
                        <input type="submit" value="Raise" class="btn btn-primary" style="margin:0 0 10px 0" />
                        <br />
                        @Html.Label("Raise: ")
                        @Html.TextBox("raise")
                    }
                </span>
            }
        }
    </div>
}
else
{
    <div> Wait for your turn!</div>
}
@if (!string.IsNullOrEmpty(Model.PokerViewModel.Winners))
{
    <div>@Model.PokerViewModel.Winners</div>
}
else
{
    <div>Stil playing</div>
}

<br />
@using (Html.BeginForm("ExitGame", "Poker", new { area = "Poker", id = Model.PokerViewModel.GameId }))
{
    <input type="submit" value="Exit game" class="btn btn-info" />
}
<br />
@if (ViewBag.IsPokerGameFinished && !ViewBag.IsAlone)
{
    using (Html.BeginForm("StartNewGame", "Poker", new { area = "Poker", id = Model.PokerViewModel.GameId }))
    {
        <input type="submit" value="Start new game" class="btn btn-info" />
    }
}

